{"version":3,"file":"main-bundle.min.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAM,aAAa,GAAG,mBAAO,CAAC,0CAAgB,CAAC,CAAC;AAChD,4CAA4C;AAE5C,MAAM,CAAC,MAAM,GAAG,GAAS,EAAE;IACvB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAE3B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3B,OAAO;KACV;IAED,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACnC,OAAO;KACV;IAED,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;IAC5D,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC9C,OAAO;KACV;IAED,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEnC,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;IAC1C,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACnC,OAAO;KACV;IAED,wFAAwF;IACxF,4BAA4B;IAC5B,MAAM,aAAa,GAA2B;QAC1C,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,YAAY;KACvB,CAAC;IACF,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IAEjC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEnB,8CAA8C;IAC9C,MAAM,gBAAgB,GAAG,IAAI,CAAC;IAE9B,IAAI,aAAwB,CAAC;IAC7B;QACI,MAAM,UAAU,GAAwB;YACpC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ;SAC5D,CAAC;QACF,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE7C,gEAAgE;QAChE,MAAM,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,MAAM,GAAG,aAAa,CAAC,cAAc,EAAE,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAEpC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAElB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAElB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAElB,aAAa,CAAC,KAAK,EAAE,CAAC;KACzB;IAED,IAAI,YAAuB,CAAC;IAC5B;QACI,MAAM,UAAU,GAAwB;YACpC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ;SACzD,CAAC;QACF,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KAC/C;IAED;QACI,IAAI,OAAO,GAAG,GAAG,CAAC,oBAAoB,EAAE,CAAC;QACzC,OAAO,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAChF,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAC5B,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACxB;IAED,IAAI,MAAuB,CAAC;IAC5B;QACI,MAAM,UAAU,GAA8B;YAC1C,IAAI,EAAE,aAAa;SACtB,CAAC;QACF,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,eAAe,EAAE,CAAC;QAC5C,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO;gBAAE,OAAO;SACvC;KACJ;IAED,IAAI,QAA2B,CAAC;IAChC;QACI,MAAM,SAAS,GAAuB;YAClC,MAAM,EAAE,WAAW;YACnB,MAAM,EAAE,CAAC;YACT,oCAAoC;YACpC,cAAc,EAAE,CAAC;SACpB,CAAC;QACF,MAAM,UAAU,GAAG,CAAE,SAAS,CAAE,CAAC;QACjC,MAAM,YAAY,GAA0B;YACxC,2BAA2B;YAC3B,WAAW,EAAE,CAAC,GAAG,CAAC;YAClB,UAAU,EAAE,UAAU;SACzB,CAAC;QACF,MAAM,MAAM,GAAmB;YAC3B,OAAO,EAAE,CAAE,YAAY,CAAE;YACzB,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,QAAQ;SACvB,CAAC;QACF,MAAM,UAAU,GAAgC;YAC5C,MAAM;SACT,CAAC;QACF,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;KACnD;IAED;QACI,IAAI,OAAO,GAAG,GAAG,CAAC,oBAAoB,EAAE,CAAC;QAEzC,MAAM,UAAU,GAAa,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;QACtD,MAAM,eAAe,GAAmB,OAAO,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,CAAC;QACjF,MAAM,eAAe,GAAiC;YAClD,IAAI,EAAE,eAAe;YACrB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,OAAO;SACnB;QACD,MAAM,UAAU,GAA4B;YACxC,gBAAgB,EAAE,CAAC,eAAe,CAAC;SACtC,CAAC;QACF,IAAI,IAAI,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAE5B,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACxB;AACL,CAAC,EAAC;;;;;;;;;;;;;;;;;UC3JF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://webgpu/./src/main.ts","webpack://webgpu/webpack/bootstrap","webpack://webgpu/webpack/before-startup","webpack://webgpu/webpack/startup","webpack://webgpu/webpack/after-startup"],"sourcesContent":["const defaultShader = require(\"./default.wgsl\");\r\n// import defaultShader from \"default.wgsl\";\r\n\r\nwindow.onload = async () => {\r\n    console.log(defaultShader);\r\n\r\n    const canvas = document.querySelector(\"canvas\");\r\n    if (!canvas) {\r\n        console.error(\"No canvas\");\r\n        return;\r\n    }\r\n    \r\n    const context = canvas.getContext(\"webgpu\");\r\n    if (!context) {\r\n        console.error(\"No webgpu context\");\r\n        return;\r\n    }\r\n\r\n    const adapter = await window.navigator.gpu.requestAdapter();\r\n    if (!adapter) {\r\n        console.error(\"Could not get WebGPU adapter\");\r\n        return;\r\n    }\r\n\r\n    console.log(adapter);\r\n    console.log([...adapter.features]);\r\n\r\n    const gpu = await adapter.requestDevice();\r\n    if (!gpu) {\r\n        console.error(\"Could not get GPU\");\r\n        return;\r\n    }\r\n\r\n    // TODO(jan): According to the spec, rgba8unorm-srgb should be supported by all devices.\r\n    // But apparently it is not.\r\n    const configuration: GPUCanvasConfiguration = {\r\n        device: gpu,\r\n        format: \"bgra8unorm\"\r\n    };\r\n    context.configure(configuration);\r\n\r\n    const queue = gpu.queue;\r\n    console.log(queue);\r\n\r\n    // TODO(jan): Determine from Vertex data size.\r\n    const vertexBufferSize = 1024;\r\n\r\n    let stagingBuffer: GPUBuffer;\r\n    {\r\n        const descriptor: GPUBufferDescriptor = {\r\n            size: vertexBufferSize,\r\n            usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC\r\n        };\r\n        stagingBuffer = gpu.createBuffer(descriptor);\r\n\r\n        // NOTE(jan): This will reject if it fails, so no need to check.\r\n        await stagingBuffer.mapAsync(GPUMapMode.WRITE);\r\n\r\n        const memory = stagingBuffer.getMappedRange();\r\n        console.log(\"memory: \", memory);\r\n        const vertices = new Float32Array(memory);\r\n        console.log(\"vertices: \", vertices);\r\n\r\n        let i = 0;\r\n        vertices[i++] = 0;\r\n        vertices[i++] = 1;\r\n        vertices[i++] = 0;\r\n        vertices[i++] = 1;\r\n\r\n        vertices[i++] = 1;\r\n        vertices[i++] = -1;\r\n        vertices[i++] = 0;\r\n        vertices[i++] = 1;\r\n\r\n        vertices[i++] = -1;\r\n        vertices[i++] = -1;\r\n        vertices[i++] = 0;\r\n        vertices[i++] = 1;\r\n\r\n        stagingBuffer.unmap();\r\n    }\r\n\r\n    let vertexBuffer: GPUBuffer;\r\n    {\r\n        const descriptor: GPUBufferDescriptor = {\r\n            size: vertexBufferSize,\r\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST\r\n        };\r\n        vertexBuffer = gpu.createBuffer(descriptor);\r\n    }\r\n\r\n    {\r\n        let encoder = gpu.createCommandEncoder();\r\n        encoder.copyBufferToBuffer(stagingBuffer, 0, vertexBuffer, 0, vertexBufferSize);\r\n        let cmds = encoder.finish();\r\n        queue.submit([cmds]);\r\n    }\r\n\r\n    let module: GPUShaderModule;\r\n    {\r\n        const descriptor: GPUShaderModuleDescriptor = {\r\n            code: defaultShader,\r\n        };\r\n        module = gpu.createShaderModule(descriptor);\r\n        const info = await module.compilationInfo();\r\n        for (const message of info.messages) {\r\n            if (message.type == \"error\") return;\r\n        }\r\n    }\r\n\r\n    let pipeline: GPURenderPipeline;\r\n    {\r\n        const attribute: GPUVertexAttribute = {\r\n            format: \"float32x4\",\r\n            offset: 0,\r\n            // TODO(jan): How to determine this?\r\n            shaderLocation: 0\r\n        };\r\n        const attributes = [ attribute ];\r\n        const vertexLayout: GPUVertexBufferLayout = {\r\n            // TODO(jan): Compute this?\r\n            arrayStride: 4 * 4,\r\n            attributes: attributes\r\n        };\r\n        const vertex: GPUVertexState = {\r\n            buffers: [ vertexLayout ],\r\n            module: module,\r\n            entryPoint: \"vsMain\"\r\n        };\r\n        const descriptor: GPURenderPipelineDescriptor = {\r\n            vertex\r\n        };\r\n        pipeline = gpu.createRenderPipeline(descriptor);\r\n    }\r\n\r\n    {\r\n        let encoder = gpu.createCommandEncoder();\r\n\r\n        const clearColor: GPUColor = {r: 0, g: 1, b: 1, a: 1};\r\n        const framebufferView: GPUTextureView = context.getCurrentTexture().createView();\r\n        const colorAttachment: GPURenderPassColorAttachment = {\r\n            view: framebufferView,\r\n            loadValue: clearColor,\r\n            storeOp: \"store\"\r\n        }\r\n        const descriptor: GPURenderPassDescriptor = {\r\n            colorAttachments: [colorAttachment]\r\n        };\r\n        let pass = encoder.beginRenderPass(descriptor);\r\n\r\n        pass.endPass();\r\n        let cmds = encoder.finish();\r\n\r\n        queue.submit([cmds]);\r\n    }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}